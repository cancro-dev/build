#!/usr/bin/env python
#
# Copyright (C) 2016 The EFIDroid Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import os
import urllib2
from HTMLParser import HTMLParser

sys.path.append(os.path.join(os.path.dirname(__file__), '../core'))
from utils import *
from tabulate import tabulate

def print_data(data):
    start = data.find('1: = Android releases =')
    end = data.find('</textarea>')

    table = []
    for line in data[start:end].splitlines():
        line = line.strip()
        cols = line.split('|')

        if len(cols) != 6:
            continue

        num = int(cols[0].strip().split(':')[0])
        date = cols[1].strip()
        tag = cols[2].strip()
        chipset = cols[3].strip()
        manifest = cols[4].strip()
        version = cols[5].strip()

        if num <= 3:
            continue

        table.append([date, tag, chipset, manifest, version])

    print tabulate(table, headers=['Date', 'Tag / Build ID', 'Chipset', 'Manifest', 'Android Version'], tablefmt='simple_tables')

def main(argv):
    cachefile = '/tmp/qaep_cache'
    if os.path.exists(cachefile) and not ('-f' in argv):
        with open(cachefile, 'r') as f:
            data=f.read()

    else:
        data = urllib2.urlopen('https://www.codeaurora.org/xwiki/bin/QAEP/release?viewer=code').read()

        with open(cachefile, 'w') as f:
            f.write(data)

    print_data(data)  

if __name__ == '__main__':
    try:
        main(sys.argv[1:])
    except:
        pr_error('Error: %s' % sys.exc_info()[1])
        raise
